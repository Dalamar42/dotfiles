#!/usr/bin/env bash
#
# bootstrap installs things.

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd)

set -e

echo ''

info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

require_util () {
    type "$1" > /dev/null 2>&1 || command -v "$1" > /dev/null 2>&1 ||
        fail "You do not have '$1' installed"
}

check_requirements () {
    require_util stow
}

setup_gitconfig () {
  if ! [ -f git.stow/.gitconfig ]
  then
    info 'setup gitconfig'

    git_credential='cache'
    if [ "$(uname -s)" == "Darwin" ]
    then
      git_credential='osxkeychain'
    fi

    user ' - What is your github author name?'
    read -e git_authorname
    user ' - What is your github author email?'
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" \
      -e "s/AUTHOREMAIL/$git_authoremail/g" \
      -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" \
      git.stow/.gitconfig.template > git.stow/.gitconfig

    success 'gitconfig'
  fi
}

link_stow () {
  local src="${1}"
  local package="$(basename ${src})"
  stow -d "${DOTFILES_ROOT}" -t "${HOME}" -S "${package}" || fail "failed to stow ${src}"
  success "stowed ${src}"
}


install_dotfiles () {
    info 'installing dotfiles'

    for src in $(find "${DOTFILES_ROOT}" -maxdepth 2 -name '*.stow')
    do
      link_stow "${src}"
    done
}

check_requirements
setup_gitconfig
install_dotfiles

echo ''
echo '  All installed!'
